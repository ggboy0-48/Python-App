[
  {
    "q": "下列能为变量 num 赋值为 10 的选项是？（ ）",
    "a": "10 = num",
    "b": "num == 10",
    "c": "int num = 10",
    "d": "num = 10",
    "key": "D",
    "an": "本题考察的是赋值运算，赋值运算符号为 =，并且变量名需要写在左边，值需要写在右边。"
  },
  {
    "q": "小明在学习了Python语言后，得出了以下几个结论，哪个结论是正确的？（ ）",
    "a": "编写完Python程序后只能先保存后才能运行",
    "b": "为了方便用户使用，可以在编写Python程序过程中不区分大小写",
    "c": "Python文件可以在不同的编程环境中运行，运行结果是一样的",
    "d": "越高的Python版本，Python程序的运行速度会越快",
    "key": "C",
    "an": "交互式运行模式不需要保存，区分大小写，运行速度与版本关系不确定，所以选C"
  },
  {
    "q": "print(53%3)的输出结果是？（ ）",
    "a": "17.0",
    "b": "17",
    "c": "2",
    "d": "2.0",
    "key": "C",
    "an": "Python中的%符号是取模运算，即返回除法的余数，而53除以3的余数为2，且为整数所以为2，选择C"
  },
  {
    "q": "下列符号不是比较运算符的是？（ ）",
    "a": "==",
    "b": "!=",
    "c": ">=",
    "d": "=",
    "key": "D",
    "an": "A,B,C都是比较运算符，分别是等于，不等于，大于等于。而D是赋值运算符。"
  },
  {
    "q": "以下Python运算符，优先级最高的是？（ ）",
    "a": "=",
    "b": "!=",
    "c": "+",
    "d": "*",
    "key": "D",
    "an": "python运算符的优先级，这四个中，*最高，+其次，！=第三，=优先级最低。"
  },
  {
    "q": "在Python中，执行语句print(2+4/2)，输出结果是哪一种数据类型？（ ）",
    "a": "整数型",
    "b": "浮点型",
    "c": "字符型",
    "d": "文字型",
    "key": "B",
    "an": "2是一个整数型的数据，4/2的计算结果是2.0，是一个浮点型的数据，整数型的2和浮点型的2.0相加，得到的是4.0，是浮点型的数据，所以选B。"
  },
  {
    "q": "在Python中，通常使用以下哪个指令获取用户的输入？（ ）",
    "a": "input()",
    "b": "print()",
    "c": "up()",
    "d": "home()",
    "key": "A",
    "an": "input()函数可以获取用户的输入，A选项正确；print()函数可以控制输出内容，B选项错误；up()函数是turtle库中的抬起画笔，C选项错误；home()函数是turtle库中的功能，控制小海龟返回(0,0)，方向为初始方向，D选项错误。"
  },
  {
    "q": "假设a = 0.7，b = 0.3，c = a + b，那么c的值是？（ ）",
    "a": "1",
    "b": "1.0",
    "c": "1.00",
    "d": "0.4",
    "key": "B",
    "an": "只要加数为浮点数，结果一定是浮点数，故0.7+0.3=1.0，c的值为1.0，本题选B。"
  },
  {
    "q": "下面是对 Python 语言的特征描述，不正确的描述是？（ ）",
    "a": "简洁易读：Python 采用简洁的语法和语义，使得代码易于阅读和理解",
    "b": "动态类型：Python 是一种动态类型的语言，不需要声明变量的类型",
    "c": "面向过程：Python 是一种面向过程的编程语言，主要关注如何设计和组织函数来实现功能",
    "d": "多平台支持：Python 可以在多种操作系统上运行，包括Windows、Linux、Mac OS等，可以实现跨平台的开发和部署",
    "key": "C",
    "an": "Python是一种面向对象编程语言，可以定义类和对象，并且可以使用多态、封装和继承等面向对象的特性"
  },
  {
    "q": "在turtle库中对画布进行如下设置turtle.setup(width=400, height=300, startx=200, starty=100)，关于该指令描述正确的是？（ ）",
    "a": "画布宽200、高100",
    "b": "画布宽300、高400",
    "c": "画布宽400、高300",
    "d": "画布宽100、高200",
    "key": "C",
    "an": "前两个参数时宽、高，所以选C"
  },
  {
    "q": "以下不可以对Python程序进行注释的是？（ ）",
    "a": "\"\"\" \"\"\"\n''' '''",
    "b": "#",
    "c": "''' '''",
    "d": "( )",
    "key": "D",
    "an": "#、\"\"\" \"\"\"、''' '''均可以为Python代码添加注释。"
  },
  {
    "q": "下列可以作为Python变量名的是？（ ）",
    "a": "or",
    "b": "1_or",
    "c": "o_r",
    "d": "or-2",
    "key": "C",
    "an": "A：Python变量命名不可以使用保留字符；B：变量开头不可用数字；D：除下划线外不得使用其他特殊符号。"
  },
  {
    "q": "使用下列哪个命令可以在Python中导入turtle库文件？（ ）",
    "a": "install Turtle",
    "b": "import turtle",
    "c": "create Turtle",
    "d": "print Turtle",
    "key": "B",
    "an": "在Python中，要导入turtle库文件，应使用import turtle命令。"
  },
  {
    "q": "下列程序绘制的图形是？（ ）\nimport turtle\nscreen = turtle.Screen()\npen = turtle.Turtle()\npen.forward(100)\npen.right(90)\npen.forward(100)\npen.right(90)\npen.forward(100)\npen.right(90)\npen.forward(100)\nturtle.done()\n",
    "a": "长方形",
    "b": "三角形",
    "c": "正方形",
    "d": "圆形",
    "key": "C",
    "an": "根据给定的程序，按照顺序绘制了四条边长为 100 的线段，然后将画笔依次向右旋转 90 度。根据绘制的\n形状特征判断，这段代码绘制的是一个正方形。"
  },
  {
    "q": "已知a=4,b=7，那么print(a>b)输出的结果是？（ ）",
    "a": "False",
    "b": "True",
    "c": "4",
    "d": "7",
    "key": "A",
    "an": "4<7，输出结果为False。"
  },
  {
    "q": "已知a=10//3+2，b=(a-1)*2，则b的值是？（ ）",
    "a": "6",
    "b": "7",
    "c": "8",
    "d": "9",
    "key": "C",
    "an": "运算结果为8。"
  },
  {
    "q": "关于命令 turtle.pensize(a) 的描述，下面选项中描述正确的是？（ ）",
    "a": "这个命令用于设置画笔的颜色",
    "b": "这个命令用于设置画笔的形状",
    "c": "这个命令用于设置画笔的粗细",
    "d": "这个命令用于设置画布的大小",
    "key": "C",
    "an": "（1）命令 turtle.pensize(a) 用于设置画笔的粗细，命令中的参数 a 代表了画笔的粗细。\n（2）用于设置画笔的颜色的命令是 turtle.pencolor(a) ，选项 A 中的描述错误。\n（3）用于设置画笔的形状的命令是 turtle.shape(a) ，选项 B 中的描述错误。\n（4）用于设置画布的大小的命令是 turtle.setup(width, height)，选项 D 中的描述错误。\n因此，选项 C 是正确答案。"
  },
  {
    "q": "某同学正在计算暑期书籍义卖收入的分配问题，假设某一天一共售卖30本书，单价20元一本，成本15元一本，销售收入（注意：是包含成本在内的销售收入）的10%用来支付摊位管理费，销售利润（注意：是剔除成本后的毛利润）的30%捐给某儿童基金会，扣除之后，剩下的为这位同学此次义卖的收入，请你计算摊位管理费、捐款金额分别是？（ ）",
    "a": "60元  180元",
    "b": "60元  45元",
    "c": "45元  45元",
    "d": "45元  180元",
    "key": "B",
    "an": "根据题意。总收入：30×20=600元，总利润:600-30×15=150元。摊位管理费:600×10%=60元，捐款金额\n:150×30%=45元，B选项符合题意。"
  },
  {
    "q": "print语句可以输出文本、字符串、数字等。（ ）",
    "a": "正确",
    "b": "错误",
    "key": "正确",
    "an": "print语句是在屏幕上打印出相应的文本或数字等。"
  },
  {
    "q": "使用print(\"Hello\",\"World\")和print(\"Hello World\")输出的结果相同。（ ）",
    "a": "正确",
    "b": "错误",
    "key": "正确",
    "an": "使用print()函数在一行中输出多个内容时，中间使用英文逗号分隔，最终输出结果中两个元素间多一个空格，\n即为Hello World，与第二条语句输出结果相同，故本题说法正确。"
  },
  {
    "q": "Python程序在Windows操作系统和Linux操作系统中都能运行，并且运行结果一致。（ ）",
    "a": "正确",
    "b": "错误",
    "key": "正确",
    "an": "python运行不受操作系统限制，所以选正确"
  },
  {
    "q": "在Python中，执行print(\"3+2\")语句得到的结果是\"5\"。（ ）",
    "a": "正确",
    "b": "错误",
    "key": "错误",
    "an": "print语句中，引号内的字符不可发生变动，正确输出应为3+2。"
  },
  {
    "q": "Python2.X和3.X两个版本相互兼容。（ ）",
    "a": "正确",
    "b": "错误",
    "key": "错误",
    "an": "Python 2.x和Python 3.x之间存在一些重要的差异，导致它们并不完全兼容。"
  },
  {
    "q": "if是Python语言的保留字之一，因此if和IF都不可以作为变量名使用。（ ）",
    "a": "正确",
    "b": "错误",
    "key": "错误",
    "an": "if是Python语言的保留字之一，不能作为变量名使用，而IF与if不同，IF不是保留字，可以作为变量名使用。"
  },
  {
    "q": "阿宝在学习Python语言编程，他写了一个程序可以实现输入月份数字就可以输出2023年该月的天数。 程序如下：\nmonthdays=[0,31,28,31,30,31,30,31,31,30,31,30,31]\nm=int(input())\nprint('2023年'+str(m)+'月有'+str(monthdays[m])+'天。')\n要想得到2023年9月的天数，应该在终端输入的数字是？（ ）",
    "a": "8",
    "b": "9",
    "c": "10",
    "d": "11",
    "key": "C",
    "an": "月份从1开始计数，因此2023年9月的天数对应的输入数字是9。"
  },
  {
    "q": "下面这个列表中，包含几个元素？（ ）\nlist = ['a', ['bb', 'cc', 'dd'], 'e', ['ff', 'gg'], 'h']",
    "a": "A. 8个",
    "b": "B. 5个",
    "c": "C. 6个",
    "d": "D. 4个",
    "key": "C",
    "an": "列表中包含5个元素，其中有两个元素是子列表，所以总共包含6个元素。"
  },
  {
    "q": "使用下列哪几个命令可以把列表list1变成列表list2？（ ）\nlist1 = ['苹果', '樱桃', '西瓜', '香蕉', '葡萄', '菠萝', '芒果', '火龙果']\nlist2 = ['苹果', '樱桃', '西瓜', '香蕉', '葡萄', '菠萝', '桑葚', '番石榴']",
    "a": "A. del list1[6:8]\nlist1 += ['桑葚', '番石榴']",
    "b": "B. del list1[6:7]\nlist1 += ['桑葚', '番石榴']",
    "c": "C. del list1[6:8]\nlist1.append(['桑葚', '番石榴'])",
    "d": "D. del list1[6:7]\nlist1.append(['桑葚', '番石榴'])",
    "key": "A",
    "an": "选项A中的命令首先删除了索引6到7的元素（包含6，不包含7），然后添加了两个新元素'桑葚'和'番石榴'，符合题目要求。"
  },
  {
    "q": "d = {'山东':'青岛', '浙江':'杭州', '安徽':'芜湖'} ，请问删除d中'山东'对应的数据值的函数或方法是？（备注：根据题意，该题选项C和选项D均正确。）",
    "a": "A. del d['浙江']",
    "b": "B. d.clear()",
    "c": "C. del d['山东']",
    "d": "D. d.pop('山东')",
    "key": "C,D",
    "an": "选项C使用del语句删除键为'山东'的项，选项D使用pop方法删除键为'山东'的项并返回对应的值，两者都能达到题目要求的效果。"
  },
  {
    "q": "以下关于循环的说法，不正确的是？（ ）",
    "a": "A. for循环可以用于遍历列表中的所有元素",
    "b": "B. while循环满足循环条件时不断地运行，直到指定的条件不满足为止",
    "c": "C. Python中可以使用do…while循环",
    "d": "D. break和continue语句都可以用在for循环和while循环中",
    "key": "C",
    "an": "Python中没有do…while循环，这是不正确的说法。其他选项描述的是循环的正确用法。"
  },
  {
    "q": "执行以下程序代码\nscore = eval(input(\"请输入成绩：\"))\nif score > 0 and score < 60:\n    print(\"不及格\")\nelif score >= 60 and score <=100:\n    print(\"及格\")\nelse:\n    print(\"请输入正确的成绩\")\n当输入60时，输出结果是？（ ）",
    "a": "A. 及格",
    "b": "B. 不及格",
    "c": "C. 请输入正确的成绩",
    "d": "D. 60",
    "key": "A",
    "an": "输入60时，根据if-elif-else语句的逻辑，60位于60至100的范围内，因此输出结果是'及格'。"
  },
  {
    "q": "下列哪个说法不正确的是？（ ）",
    "a": "A. 字典是通过key（键）来进行访问的，跟列表、元组不同",
    "b": "B. 字典没有头上标和尾下标，跟value对应的就只有key（键）",
    "c": "C. Python中可以通过重新给字典当中的key赋值的方式修改对应的value，不能通过新增key的方式来添加新的元素",
    "d": "D. 用Python内置函数是可以删除字典当中的元素的，整个字典也可以被清空或者删除",
    "key": "C",
    "an": "在Python中，字典是一个可变的容器对象，可以通过重新给字典中的key赋值来修改对应的value，也可以通过新增key-value对来添加新的元素。因此，选项C的说法是不正确的。"
  },
  {
    "q": "请问此程序运行后的结果是？（ ）\ns=1\nfor i in range(1,4,3):\n    s = s+i\nprint(s)",
    "a": "A. 2",
    "b": "B. 6",
    "c": "C. 1",
    "d": "D. 5",
    "key": "A",
    "an": "程序中for循环的range函数步长为3，因此只会执行一次，i为1，所以s变为1+1=2。"
  },
  {
    "q": "关于Python循环结构的说法，下列哪个是错误的？（ ）",
    "a": "A. Python可以通过for和while循环，实现遍历和各种循环等功能",
    "b": "B. break是用来跳出自己所在的整个循环体，执行循环后面的语句",
    "c": "C. continue结束整个循环过程，不再判断循环的执行条件，继续顺序执行循环后面的语句",
    "d": "D. 遍历循环中的遍历结构可以是字符串或者range()函数等",
    "key": "C",
    "an": "continue语句是用来跳过当前循环的剩余部分，并继续进行下一轮循环的执行，而不是结束整个循环过程。因此，选项C的说法是错误的。"
  },
  {
    "q": "下面几个有关流程控制的说法，那个是错误的？（ ）",
    "a": "A. 如果条件判断语句永远为 true，循环将会无限的执行下去",
    "b": "B. 当判断条件为假（false） 时，循环结束",
    "c": "C. 在while 语句中，\"判断条件\"不可以是个常值",
    "d": "D. 执行语句可以是单个语句或语句块。判断条件可以是任何表达式等",
    "key": "C",
    "an": "在while语句中，判断条件可以是任何表达式，包括常值表达式。如果常值为True，则循环会无限执行，直到有break语句或者满足某个退出条件。因此，选项C的说法是错误的。"
  },
  {
    "q": "运行下面的代码，输出的结果是？（ ）\nname1 = '玛卡巴卡'\nname2 = '依古比古'\nname3 = '唔西迪西'\nprint('晚安' + name2)",
    "a": "A. 晚安玛卡巴卡",
    "b": "B. 晚安依古比古",
    "c": "C. 晚安唔西迪西",
    "d": "D. 晚安name2",
    "key": "B",
    "an": "代码中使用字符串拼接，输出'晚安'与变量name2的值'依古比古'，因此输出结果是'晚安依古比古'。"
  },
  {
    "q": "下面代码中，不能创建一个字典的是？（ ）",
    "a": "A. d = {}",
    "b": "B. d = {'葡萄', 20}",
    "c": "C. d = {'葡萄':20}",
    "d": "D. d = {'葡萄':20, '西瓜':12}",
    "key": "B",
    "an": "选项B试图创建一个集合而不是字典。字典需要使用花括号{}并包含键值对，例如选项C和D。"
  },
  {
    "q": "下列定义元组的语句，不正确的是？（ ）",
    "a": "A. t = ( )",
    "b": "B. t = ('sun')",
    "c": "C. t = ('star',)",
    "d": "D. t = ('sun','star','moon')",
    "key": "A",
    "an": "选项A是错误的，因为元组即使是空的，也需要一个小括号和一个逗号来定义。例如，t = () 是正确的空元组定义。"
  },
  {
    "q": "下列关于列表的说法，正确的是？（ ）",
    "a": "A. 列表创建后不能被修改",
    "b": "B. 列表中各元素的类型必须相同",
    "c": "C. 列表不能用下标访问",
    "d": "D. 通过方括号[]可以创建列表",
    "key": "D",
    "an": "选项D是正确的。列表是可变的，这意味着它们的内容可以被修改。列表中的元素可以是不同类型的，并且可以使用下标访问列表中的元素。"
  },
  {
    "q": "已知列表animal = ['cat','dog','monkey','tiger','lion']，要想得到'cat'的输出结果，以下哪个选项的语句是不正确的？（ ）",
    "a": "A. animal[0]",
    "b": "B. animal[1]",
    "c": "C. animal.reverse()\nanimal[4]",
    "d": "D. animal.reverse()\nanimal[-1]",
    "key": "B",
    "an": "选项B是不正确的，因为列表animal中'cat'是第一个元素，应该使用animal[0]来访问。选项C和D中使用了reverse()方法，这会改变列表元素的顺序，但'cat'将不再是第一个元素。"
  },
  {
    "q": "关于Python的元组类型，以下选项中描述错误的是？（ ）",
    "a": "A. 元组不可以被修改",
    "b": "B. Python中元组使用小括号和逗号表示",
    "c": "C. 元组中的元素要求是相同类型",
    "d": "D. 一个元组可以作为另一个元组的元素，可以采用多级索引获取信息",
    "key": "C",
    "an": "选项C是错误的。元组中的元素不需要是相同类型，元组可以包含不同类型的元素。"
  },
  {
    "q": "对 s = \"www.baidu.com\" 执行 s.split(\".\")后的结果是？（ ）",
    "a": "A. www.baidu.com",
    "b": "B. [\"www\", \"baidu\", \"com\"]",
    "c": "C. \"www.baidu.com\"",
    "d": "D. wwwbaiducom",
    "key": "B",
    "an": "split(\".\")方法将字符串s按照\".\"分割成列表，因此结果是[\"www\", \"baidu\", \"com\"]。"
  },
  {
    "q": "下面代码运行后，输出区打印的内容是？（ ）\ns = 0\nfor i in range(10):\n    s += 1\n    if i * i < 50:\n        break\nprint(s)",
    "a": "A. 0",
    "b": "B. 1",
    "c": "C. 7",
    "d": "D. 3",
    "key": "B",
    "an": "循环开始后，s 初始化为 0。在第一次迭代时，i 为 0，s 增加到 1，然后判断 i*i 是否小于 50，满足条件，但因为 i 为 0，所以不执行 break，继续迭代。在第二次迭代时，i 为 1，s 增加到 2，再次判断，i*i（即 1）小于 50，继续迭代。第三次迭代时，i 为 2，s 增加到 3，判断 4（即 i*i）小于 50，不满足条件，执行 break，退出循环。因此，最终输出 s 的值为 3。"
  },
  {
    "q": "以下代码执行后输出是？（ ）\nlist0 = [5, 4, 3, 2, 2]\nlist0.remove(2)\nlist0.insert(2, 6)\nprint(list0)",
    "a": "A. [5, 4, 3, 6, 2]",
    "b": "B. [5, 4, 3, 2, 6]",
    "c": "C. [5, 4, 3, 2, 6, 2]",
    "d": "D. [5, 4, 6, 3, 2]",
    "key": "B",
    "an": "remove(2) 会删除列表中第一个值为 2 的元素，因此列表变为 [5, 4, 3, 2]。然后 insert(2, 6) 在索引 2 的位置插入 6，所以最终列表变为 [5, 4, 6, 3, 2]。"
  },
  {
    "q": "执行以下运算后，text2的值是？（ ）\ntext1 = \"Good work\" \ntext2 = text1[-1]*3",
    "a": "A. Good workGood workGood work",
    "b": "B. workworkwork",
    "c": "C. work work work",
    "d": "D. kkk",
    "key": "D",
    "an": "text1[-1] 获取的是字符串 text1 的最后一个字符 'k'，然后 'k'*3 的结果是 'kkk'。"
  },
  {
    "q": "执行以下程序代码\nscore = eval(input(\"请输入成绩：\"))\nif score > 0 and score < 60:\n    print(\"不及格\")\nelif score >= 60 and score <=100:\n    print(\"及格\")\nelse:\n    print(\"请输入正确的成绩\")\n当输入60时，输出结果是？（ ）",
    "a": "A. 及格",
    "b": "B. 不及格",
    "c": "C. 请输入正确的成绩",
    "d": "D. 60",
    "key": "A",
    "an": "输入60时，根据程序中的条件判断，60在60至100的范围内，满足条件 'score >= 60 and score <=100'，因此输出结果是 '及格'。"
  },
  {
    "q": "学期末学校进行了体育测试，其中跳绳项目每人有三次机会，取最好的成绩为最后得分。小贝、小李和小司三人的成绩数据如下：tscores=[[\"小贝\",132,126,130],[\"小李\",117,120,123],[\"小司\",129,140,137]]，那么要得到小贝的第二次成绩，下列操作正确的是？（ ）",
    "a": "A. tscores[0][2]",
    "b": "B. tscores[1][1]",
    "c": "C. tscores[0[2]]",
    "d": "D. tscores[1[1]]",
    "key": "A",
    "an": "在列表 tscores 中，小贝的成绩在第一行（索引为0），第二次成绩在第三列（索引为2），因此正确的操作是 tscores[0][2]。"
  },
  {
    "q": "小贝、小李和小司三人三次跳绳的成绩数据如下：tscores=[[\"小贝\",132,126,130],[\"小李\",117,120,123],[\"小司\",129,140,137]]，若要输出小李同学的最好成绩，则正确的处理方式是？（ ）",
    "a": "A. max(tscores[1])",
    "b": "B. max(tscores[1][1:])",
    "c": "C. tscores[1].max()",
    "d": "D. tscores[1][1:].max()",
    "key": "B",
    "an": "小李同学的成绩位于数组中第二行，行索引为1。由于第一项是名字，所以成绩从第二列开始，索引为1。要找到最大值，需要先对成绩部分进行切片，即tscores[1][1:]，然后使用max函数求最大值。"
  },
  {
    "q": "有如下代码：\ngs=['众鸟高飞尽','孤云独去闲','相看两不厌','只有敬亭山']\nf=open('jts.txt','w')\nf.write(','.join(gs)+'\n')\nf.close()\n有关于上述代码，正确的说法是？（ ）",
    "a": "A. 在执行代码前，必须要先新建一个\"jts.txt\"的文件",
    "b": "B. 在文件\"jts.txt\"中，所有相邻诗句之间将发生换行",
    "c": "C. f.write(','.join(gs)+'\n')也可以用f.write('\\n'.join(gs)+',')替换，显示结果是相同的",
    "d": "D. 该段代码的主要功能是将列表gs中的四句古诗写入到\"jts.txt\"文件中，诗句之间以逗号连成一行",
    "key": "D",
    "an": "选项D正确。A选项错误，因为如果文件不存在，open函数会创建文件。B选项错误，因为诗句之间是逗号分隔，不是换行。C选项错误，因为f.write(','.join(gs)+'\n')是将所有元素以逗号连接后加一个换行符，而f.write('\n'.join(gs)+',')是每句诗之后跟一个逗号，最后一个元素后没有逗号。"
  },
  {
    "q": "int()函数可以将非十进制数或数字字符串转换为十进制数，以下关于int()函数的使用，正确的是？（ ）",
    "a": "A. int(\"0b1010\",10)",
    "b": "B. int(\"1010\",10)",
    "c": "C. int(\"0o50\",10)",
    "d": "D. int(\"80\",8)",
    "key": "B",
    "an": "选项B是正确的。int()函数可以将字符串形式的数字转换成整数，其中'1010'是一个十进制数，可以直接用int('1010', 10)转换。选项A和C中指定了非十进制数的前缀（'0b'和'0o'），但第二个参数却指定了10，这是矛盾的。选项D中，8是一个有效的基数，但'80'不是有效的八进制数。"
  },
  {
    "q": "键盘输入“杭州亚运会即将于2023年9月23日至10月8日举办。”，以下代码的输出结果是？（ ）\ntry:\n    n=input(\"请输入文字：\")\n    x=n.count(\"2\")\n    print(x)\nexcept:\n    print(\"程序执行错误\")\n",
    "a": "A. 程序执行错误",
    "b": "B. 2",
    "c": "C. 3",
    "d": "D. 15",
    "key": "C",
    "an": "count() 方法用于统计字符串里某个字符或子字符串出现的次数。程序是统计输入一段文字中'2'出现的次数，所以执行结果为3。程序正常运行后，不再执行except后的语句。"
  },
  {
    "q": "初学者常采用异常处理解决程序中出现的意外情况，下面语句的执行结果是？（ ）\ntry:\n    s1 = '我爱中国'\n    s2 = 2023\n    s   = s1 + s2\n    print(s)\nexcept:\n    print('错误')\nfinally:\n    print('程序结束')\n",
    "a": "A. 我爱中国2023\n    程序结束",
    "b": "B. 错误 \n    程序结束",
    "c": "C. 我爱中国2023",
    "d": "D. 错误",
    "key": "B",
    "an": "s1 = '我爱中国' 是字符串型；s2 = 2023 是整型；s = s1 + s2不能直接相加，程序运行会报错。因此会执行except语句，输出'错误'；无论是否报错，程序都会执行finally，所以最终运行结果为'错误'和'程序结束'。"
  },
  {
    "q": "对一组数据[5, 2, 6, 4, 8, 1, 7, 3]进行排序，使用冒泡排序按从大到小的顺序进行排列，则第2轮排序过后的结果是？（ ）",
    "a": "A. 2, 4, 5, 1, 6, 3, 7, 8",
    "b": "B. 6, 5, 8, 4, 7, 3, 2, 1",
    "c": "C. 5, 6, 4, 8, 2, 7, 3, 1",
    "d": "D. 5, 6, 4, 8, 7, 3, 2, 1",
    "key": "B",
    "an": "冒泡排序的第2轮过后，最大的数8会冒泡到它应该在的位置，即数组的最后一个位置。此时数组变为[5, 6, 4, 8, 7, 3, 2, 1]，然后继续执行第3轮排序。"
  },
  {
    "q": "关于Python中abs()函数，描述不正确的是？（ ）",
    "a": "A. abs()函数的功能是取一个整数的绝对值",
    "b": "B. abs(0)的运行结果是0",
    "c": "C. abs(3.0)的运行结果是3.0",
    "d": "D. abs(-3)的运行结果是3",
    "key": "A",
    "an": "abs()函数的功能是取一个数的绝对值，这个数可以是整数也可以是浮点数。因此，选项A的描述是不正确的，因为abs()函数不仅限于整数。"
  },
  {
    "q": "下列程序运行结果是 False 的是？（ ）",
    "a": "A. print(all(['1','2','3']))",
    "b": "B. print(all(()))",
    "c": "C. print(all(('1','2','3','4','5')))",
    "d": "D. print(all(['1','2','3','']))",
    "key": "D",
    "an": "all()函数用于判断给定的可迭代参数iterable中的所有元素是否都为True，如果可迭代参数为空，则默认返回True。选项D中的列表包含一个空字符串，它被视为False，因此all()函数将返回False。"
  },
  {
    "q": "小明运行下面的程序，运行结果正确的是？（ ）\nh=[6,15,1,0,7,9,5]\np=sorted(h)\nprint(p)",
    "a": "A. (0, 1, 5, 6, 7, 9, 15)",
    "b": "B. (15, 9, 7, 6, 5, 1, 0)",
    "c": "C. [0, 1, 5, 6, 7, 9, 15]",
    "d": "D. [15, 9, 7, 6, 5, 1, 0]",
    "key": "C",
    "an": "sorted()函数返回一个列表的新的排序副本，不会修改原始列表。因此，sorted(h)将返回一个新的升序列表[0, 1, 5, 6, 7, 9, 15]。"
  },
  {
    "q": "关于open()函数的参数，下列描述不正确的是？（ ）",
    "a": "A. 'r'以只读方式打开文件，如果文件不存在，则会提示错误",
    "b": "B. 'w'以写入的方式打开文件，如果文件不存在，则会提示错误",
    "c": "C. 'a'打开文件，并将新内容写入到已有内容之后",
    "d": "D. 'r+'以读、写方式打开文件",
    "key": "B",
    "an": "选项B的描述是不正确的。'w'模式用于写入：打开一个文件用于写入。如果文件存在，它会被覆盖。如果文件不存在，创建新文件。"
  },
  {
    "q": "执行 print('{:.1f}'.format(23.792)) 返回的结果是？（ ）",
    "a": "A. 23",
    "b": "B. 23.0",
    "c": "C. 23.8",
    "d": "D. 23.792",
    "key": "C",
    "an": "format()函数用于格式化浮点数，'{:.1f}'指定保留一位小数，因此23.792格式化后为23.8。"
  },
  {
    "q": "Python中的哪个模块可以用来发送HTTP请求？（ ）",
    "a": "A. http",
    "b": "B. requests",
    "c": "C. https",
    "d": "D. http_request",
    "key": "B",
    "an": "requests模块是Python中一个非常流行的第三方库，用于发送HTTP请求。"
  },
  {
    "q": "下列有关函数的描述中，正确的是？（ ）",
    "a": "A. 函数中必须有return语句",
    "b": "B. 在函数内部不能使用全局变量",
    "c": "C. 函数能提高应用的模块化程度和代码的重复利用率",
    "d": "D. 函数内容以大括号起始，并且缩进",
    "key": "C",
    "an": "函数不一定非要有return语句，如果没有，则默认返回None。函数内部可以声明全局变量，但需要在函数内部使用global关键字。Python中函数内容以缩进开始，而不是大括号。"
  },
  {
    "q": "下列哪个语句能够定义参数个数不确定的函数？（ ）",
    "a": "A. hs(parameters)",
    "b": "B. hs(parameters[])",
    "c": "C. hs(parameters{})",
    "d": "D. hs(*parameters)",
    "key": "D",
    "an": "在Python中，使用*来定义可变参数，即函数可以接受任意数量的参数，这些参数被存储在一个元组里。"
  },
  {
    "q": "执行如下Python代码的结果是？（ ）\ndef area(r,pi=3.14):\n     return r*r*pi\nprint(area(2,10))",
    "a": "A. 40",
    "b": "B. 200",
    "c": "C. 400",
    "d": "D. 20",
    "key": "A",
    "an": "函数area计算圆的面积，公式为pi*r*r。当半径r为2，pi为10时，面积为2*2*10=40。"
  },
  {
    "q": "执行如下Python代码，输出结果是？（ ）\ndef hs(num):\n    num += 1\n    return num\nn=10\ns=hs(n)\nprint(s)",
    "a": "A. 11",
    "b": "B. 10",
    "c": "C. 1",
    "d": "D. 运行错误",
    "key": "A",
    "an": "函数hs接受一个参数num，并将num加1后返回。当n为10时，函数返回11，因此输出结果为11。"
  },
  {
    "q": "有如下Python程序，输出的结果是？（ ）\ndef whao(year = '2023'):\n    print('你好' + year)\nwhao() ",
    "a": "A. 你好",
    "b": "B. 你好2023",
    "c": "C. 你好year",
    "d": "D. 没有输出",
    "key": "B",
    "an": "函数whao()有一个默认参数year='2023'，调用whao()时没有传入参数，因此使用默认值，输出结果为'你好2023'。"
  },
  {
    "q": "编写计算正方体体积的匿名函数，下列哪一个语句是正确的？（ ）",
    "a": "A. rst = lambda a : a * 3",
    "b": "B. lambda a : a * 3",
    "c": "C. rst = lambda a : a ** 3",
    "d": "D. lambda a : a ** 3",
    "key": "C",
    "an": "匿名函数使用关键字lambda定义，其后紧跟参数和表达式。选项C正确定义了一个匿名函数，计算正方体的体积（边长的立方）。"
  },
  {
    "q": "执行如下Python程序，运行的结果是？（ ）\ndef zfzh(s):\n    c = ''\n    for ch in s:\n        if \"9\">=ch>=\"0\":\n            c+=str(int(ch)+1)\n        elif \"z\">=ch>=\"a\":\n            c+= chr(ord(ch)- ord(\"a\")+ord(\"A\"))\n    return c\ns = 'hzag-21-8'\nprint(zfzh(s)) ",
    "a": "A. HZAG329",
    "b": "B. 923HZAG",
    "c": "C. GAZH329",
    "d": "D. 923GAZH",
    "key": "A",
    "an": "函数zfzh()根据输入字符串s的每个字符进行转换，数字字符加1，小写字母转换为其大写形式。因此，'hzag-21-8'转换后为'HZAG329'。"
  },
  {
    "q": "在Python中，以下哪个代码是安装numpy模块的方法？（ ）",
    "a": "A. pip install numpy",
    "b": "B. pip uninstall numpy",
    "c": "C. install numpy",
    "d": "D. setup numpy",
    "key": "A",
    "an": "安装Python模块通常使用pip工具，因此正确的安装numpy模块的命令是pip install numpy。"
  },
  {
    "q": "用递推算法求解n个自然数的乘积，请问代码中横线上需要填入的正确代码是？（ ）\ndef fact(n):\n    s=1\n    for i in range(1,n+1):\n        s=s*i\n    return ________\na=fact(5)\nprint(a)",
    "a": "A. s",
    "b": "B. i",
    "c": "C. fact(n-1)",
    "d": "D. fact(n)",
    "key": "A",
    "an": "递推算法中，函数返回的应该是累乘的结果s，因此正确填入的代码是s。"
  },
  {
    "q": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？可以用下列代码解决这个问题，请问这段代码是基于（ ）算法编写的？\nhigh=100\ns=0\nsum=0\nfor i in range(10):\n    s,high=high+high/2,high/2\n    sum=sum+s\nsum=sum-high\nprint(sum)\nprint(high)",
    "a": "A. 递归",
    "b": "B. 枚举",
    "c": "C. 递推",
    "d": "D. 二分",
    "key": "C",
    "an": "代码使用了一个for循环来模拟球的落下和反弹过程，每次迭代更新高度和总路程，这是递推算法的典型应用。"
  },
  {
    "q": "用递归算法求1~n个连续自然数的乘积的代码如下，请选择合适的代码补全程序？（ ）\ndef Chengji(n):\n    if n <=1:\n        return 1\n    else:\n        return _____?_______\nprint(Chengji(3))",
    "a": "A. n*Chengji(n)",
    "b": "B. n*Chengji(n-1)",
    "c": "C. n*Chengji(n+1)",
    "d": "D. n×Chengji(n-1)",
    "key": "B",
    "an": "递归算法需要一个递归终止条件和递归步骤。在此程序中，当n小于等于1时，返回1。否则，返回n乘以Chengji(n-1)的结果，这是递归调用。"
  },
  {
    "q": "2. 给定一个集合 s = {1, 2, 3, 4, 5}，以下哪个选项可以实现从s 中移除所有偶数元素的功能？（ ）",
    "a": "A. 使用集合推导式，但需要编写相应的逻辑",
    "b": "B. 使用filter函数，配合lambda表达式",
    "c": "C. 使用列表推导式，但需要编写相应的逻辑",
    "d": "D. 使用集合推导式，配合相应的逻辑",
    "key": "D",
    "an": "选项D是正确的。可以使用集合推导式，结合x % 2 != 0来过滤出所有奇数，从而实现移除所有偶数元素的功能。"
  },
  {
    "q": "3. 下列代码的运行结果是？（ ）\\ntup = (1, 2, 3, 4, 5)\ntup[2] = 10   \nprint(tup)",
    "a": "A. 代码能正常运行，并输出结果",
    "b": "B. 代码运行出错，因为尝试修改元组",
    "c": "C. 代码运行出错，因为索引错误",
    "d": "D. 代码运行出错，因为其他原因",
    "key": "B",
    "an": "元组是不可变的，因此不能对元组进行赋值操作。尝试修改元组中的元素会导致TypeError。"
  },
  {
    "q": "4. tuple1 = ('aa', 'bb', 'cc', '22')，则tuple1.index('22')的值是？（ ）",
    "a": "A. 1",
    "b": "B. 2",
    "c": "C. 3",
    "d": "D. 4",
    "key": "C",
    "an": "tuple1.index('22')将返回元素'22'在元组中的索引，根据元组tuple1的定义，'22'是第四个元素，索引为3。"
  },
  {
    "q": "7. 小张编写一款石头剪子布游戏时，导入random库并将b赋值为[\"剪刀\",\"石头\",\"布\"]，不能实现随机产生b列表中一个元素的表达式是？（ ）",
    "a": "A. random.choice(b)",
    "b": "B. b[random.randint(0,2)]",
    "c": "C. random.randrange(3) to select from b",
    "d": "D. random.random()*3 and use int() to get index",
    "key": "D",
    "an": "选项D是错误的，因为random.random()生成的是[0,1)之间的浮点数，乘以3后得到的浮点数不能直接用作索引，需要通过int()取整数部分，并且可能还需要使用modulus operator来确保索引在列表范围内。"
  },
  {
    "q": "10. Python使用range可以创建数值列表。下面可以正确输出600以内6的倍数的语句是？（ ）",
    "a": "A. print(list(range(100, 600, 6)))",
    "b": "B. print(list(range(0, 600, 10)))",
    "c": "C. print(list(range(1, 601, 6)))",
    "d": "D. print(list(range(6, 601, 6)))",
    "key": "D",
    "an": "选项D正确。range(6, 601, 6)将生成一个序列，从6开始到600，每次增加6，这将输出600以内所有6的倍数。"
  },
  {
    "q": "11. 学校气象站记录了周一到周日的PM2.5的数据\npminfo=[82,57,91,67,103,79,99]\n根据需求，输出周日、周六、周五三天PM2.5数据的程序代码是？（ ）",
    "a": "A. print(pminfo[7:5:-1])",
    "b": "B. print(pminfo[-1:3:-1])",
    "c": "C. print(pminfo[-1:5:7])",
    "d": "D. print(pminfo[5:7:-1])",
    "key": "B",
    "an": "选项B正确。pminfo[-1:3:-1]利用了Python的切片功能，从列表的末尾开始向前取三个元素，即周日、周六和周五的数据。"
  },
  {
    "q": "12. 回文数是指正序(从左向右)和倒序(从右向左)读都是一样的整数。下面可以正确打印三位回文数的语句是？（ ）",
    "a": "A. print(i for i in range(100,999) if str(i) == str(i)[::-1])",
    "b": "B. print([i for i in range(1,1000) if str(i) == str(i)[::-1]])",
    "c": "C. print([i for i in range(1,999) if str(i) == str(i)[::-1]])",
    "d": "D. print([i for i in range(100,1000) if str(i) == str(i)[::-1]])",
    "key": "D",
    "an": "选项D正确。列表推导式遍历100到999之间的数，检查每个数是否为回文数，并将结果打印出来。"
  },
  {
    "q": "13. 下列哪个选项是正确的关于Python列表的定义？（ ）",
    "a": "A. 列表是有序的、可变动的元素集合",
    "b": "B. 列表是有序的、不可变动的元素集合",
    "c": "C. 列表是无序的、可变动的元素集合",
    "d": "D. 列表是无序的、不可变动的元素集合",
    "key": "A",
    "an": "选项A正确。Python中的列表是有序的，可以按照插入的顺序访问元素，同时也是可变的，可以修改列表的内容。"
  },
  {
    "q": "17. 以下哪个选项可以创建一个列表，包含数字 1 到 10 的平方？（ ）",
    "a": "A. [x*x for x in range(1, 11)]",
    "b": "B. {x*x for x in range(1, 11)}",
    "c": "C. (x*x for x in range(1, 11))",
    "d": "D. <x*x for x in range(1, 11)>",
    "key": "A",
    "an": "选项A正确。这是Python中的列表推导式，可以创建一个列表，其中包含从1到10的每个数字的平方。"
  },
  {
    "q": "18. 以下哪个选项可以创建一个集合，包含 1 到 10 的奇数？（ ）",
    "a": "A. {x for x in range(1, 11)} if x % 2 != 0",
    "b": "B. {x for x in range(1, 11) if x % 2 != 0}",
    "c": "C. [x for x in range(1, 11) if x % 2 != 0]",
    "d": "D. [x for x in range(1, 11)] if x % 2 != 0",
    "key": "B",
    "an": "选项B正确。这是Python中的集合推导式，可以创建一个集合，其中包含1到10之间的所有奇数。"
  },
  {
    "q": "19. 下面的集合推导式将会生成什么集合？（ ）\nst = {x%2 for x in range(10)}",
    "a": "A. {0}",
    "b": "B. {0, 1}",
    "c": "C. {1, 2}",
    "d": "D. {0, 2}",
    "key": "B",
    "an": "集合推导式将会包含0到9每个数字除以2的余数，即生成{0, 1}。"
  },
  {
    "q": "20. 下面代码的执行结果是？（ ）\nknights = {'孙坚': '江东猛虎', '孙策': '小霸王'}\nfor k, v in knights.items():\n    print(\"大将：{}，绰号：{}\".format(k, v))",
    "a": "A. 输出结果：\n大将：孙坚，绰号：江东猛虎\n大将：孙策，绰号：小霸王",
    "b": "B. 输出结果：\n大将：孙策，绰号：小霸王\n大将：孙坚，绰号：江东猛虎",
    "c": "C. 没有输出",
    "d": "D. 程序运行错误",
    "key": "A",
    "an": "代码遍历字典knights中的所有项，并打印每个键值对。由于字典的顺序在Python 3.7+中是有序的，输出结果将按照插入顺序显示。"
  },
  {
    "q": "以下程序中，a= Spinbox(win1,from_=10,to=100)的作用是？（ ）\nfrom tkinter import *\nwin1= Tk()\na= Spinbox(win1,from_=10,to=100)\na.pack()\nmainloop()",
    "a": "A. 创建一个范围在10到100的Spinbox控件",
    "b": "B. 创建一个范围在1到100的Spinbox控件",
    "c": "C. 创建一个范围在0到10的Spinbox控件",
    "d": "D. 创建一个范围在100到1000的Spinbox控件",
    "key": "A",
    "an": "Spinbox控件使用from_和to参数来定义数值范围，这里指定了范围是10到100。"
  },
  {
    "q": "编写一个程序，如下图所示，用于计算输入两个数的和，并通过窗口输出计算结果。\n空白处应补充的代码是？（ ）",
    "a": "A. entry_widget = Entry(root)",
    "b": "B. sum = entry1.get() + entry2.get()",
    "c": "C. label = Label(root, text='两数之和为：')",
    "d": "D. All of the above",
    "key": "D",
    "an": "为了创建一个简单的GUI程序，需要一个输入框(Entry)来获取用户输入的数字，一个按钮来触发求和操作，以及一个标签(Label)来显示结果。因此，所有选项都是需要的。"
  },
  {
    "q": "在使用SQLite数据库时，游标的主要作用是？（ ）",
    "a": "A. 管理数据库连接",
    "b": "B. 用于数据库的备份和恢复",
    "c": "C. 储存数据库的表结构",
    "d": "D. 执行SQL查询并获取结果",
    "key": "D",
    "an": "游标(cursor)是SQLite数据库操作中用于执行SQL查询语句并获取结果的对象。"
  },
  {
    "q": "给定以下 Python 代码，连接到一个 SQLite 数据库并查询表 students。请问，查询结果中包含多少个学生？（ ）",
    "a": "A. 2",
    "b": "B. 3",
    "c": "C. 4",
    "d": "D. 5",
    "key": "C",
    "an": "代码创建了一个名为students的表，并插入了4条记录。查询操作是针对这个表执行的，因此查询结果将包含4个学生。"
  },
  {
    "q": "运行以下Python代码，结果是？（ ）\nclass Person():\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n    def say_hello(self):\n        print(f\"Hello, my name is {self.name}. I am {self.age} years old.\")\n\nperson1 = Person(\"Alice\", 25)\nperson2 = Person(\"Bob\", 30)\nperson1.say_hello()",
    "a": "A. Hello, my name is Alice. I am 25 years old.",
    "b": "B. Hello, my name is Bob. I am 30 years old.",
    "c": "C. Both A and B",
    "d": "D. None of the above",
    "key": "A",
    "an": "代码中创建了Person类的两个实例，分别代表Alice和Bob。调用person1实例的say_hello方法将打印与Alice相关的问候信息。"
  },
  {
    "q": "下面定义类的方法正确的是？（ ）",
    "a": "A. def cat()",
    "b": "B. def Cat()",
    "c": "C. class cat()",
    "d": "D. class Cat()",
    "key": "D",
    "an": "选项D是正确的类定义方式。类名应遵循大驼峰式命名规则，即首字母大写。类定义使用关键字class后跟类名和一对圆括号。"
  },
  {
    "q": "运行以下Python代码，结果是？（ ）\nclass Parent():\n    def __init__(self, name):\n        self.name = name\n    \n    def greetings(self):\n        print(\"Parent: Hi, I'm\", self.name)\n    \nclass Child(Parent):\n    def greetings(self):\n        super().greetings()  \n        print(\"Child: Hello!\")\n\nparent = Parent(\"Alice\")\nchild = Child(\"Bob\")\nchild.greetings()",
    "a": "A. Parent: Hi, I'm Bob\nChild: Hello!",
    "b": "B. Parent: Hi, I'm Alice",
    "c": "C. Parent: Hi, I'm BobChild: Hello!",
    "d": "D. None of the above",
    "key": "A",
    "an": "代码展示了一个简单的继承示例。Child类继承了Parent类，并重写了greetings方法。super()函数用于调用父类的方法。因此，输出首先是来自Parent类的问候，随后是Child类的问候。"
  },
  {
    "q": "有如下Python程序段：\nn=3\nm=2\na=[[0 for i in range(n)] for j in range(m)]\na.append([0,0,n-m])\na.insert(-1,[n for i in range(n)])\nprint(a)\n执行程序后,下列选项中值为1的是？（ ）",
    "a": "A. len(a)",
    "b": "B. a[-1]",
    "c": "C. a[-1][0]",
    "d": "D. a[0][0]",
    "key": "D",
    "an": "程序创建了一个二维列表a，初始包含m*n个0。通过append和insert操作修改了a。最终a是一个包含3个子列表的列表，第一个子列表是[[0, 0, 1]]，第二个子列表是[n] * n，其中n为3，因此a[0][0]的值为0。"
  },
  {
    "q": "以下选项中，不是tkinter变量类型的是？（ ）",
    "a": "A. IntVar()",
    "b": "B. StringVar()",
    "c": "C. DoubleVar()",
    "d": "D. FloatVar()",
    "key": "C",
    "an": "选项C是不正确的。tkinter模块提供了多种变量类型，包括IntVar()用于整数，StringVar()用于字符串，以及DoubleVar()用于浮点数。没有FloatVar()类型。"
  },
  {
    "q": "关于tkinter，以下说法错误的是？（ ）",
    "a": "A. Label是签控件，可以显示文本和位图",
    "b": "B. Radiobutton是发送消息控件",
    "c": "C. Text是文本控件，用于显示多行文本",
    "d": "D. Button是按钮控件，在程序中显示按钮",
    "key": "B",
    "an": "选项B是错误的。Radiobutton是单选按钮控件，用于在一组选项中选择一个。其他选项描述正确：Label用于显示文本或图像，Text用于多行文本输入，Button用于创建按钮。"
  }
]